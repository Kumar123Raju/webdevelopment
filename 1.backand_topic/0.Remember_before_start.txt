1)  .env(iske andar wo sab mention karte hai jisko hum dusre file me use krne wale hai)(usko-> require("dotenv").config()   se import kar skte hai(also npm i dotenv)
     (usko process.env.____ se use kar skte hai)
-----------------------------------------------------------------------------------
PORT=3000
DATABASE_URL=mongodb://127.0.0.1:27017/Rjdatabase


--------------------------------------------------------------------------------

2)  file name: models   (isme hum database ka model kaisa hoga wo design karenge. mtlb schema design karenge)-------------------start----------------
------------------
steps 1: mongoose ko require karo( const mongoose=require("mongoose")   )
stemp 2: const dbschema=new mongoose.Schema({})  se Schema ready karo
step 3: export krdo (   module.exports=mongoose.model("dbstruct",dbschema);   //learn it
code:
const mongoose=require("mongoose");

const dbSchema=new mongoose.Schema({

        Name:{
                type:String,
                require:true,
                maxLenth:50,
        },
        Roll:{
                type:String,
                require:true,
                maxLenth:50,
        },
        college:{
                type:String,
                default:"NIT JAMSHEDPUR",
                maxLenth:50,
        }


});

module.exports=mongoose.model("dbstruct",dbSchema);  //export ho gaya


-----------------------------------------------------------------------------------------------------------------------------END-----------------
3.controller  (isme logic hoga ke agar koi route ayega to kya hoga......isko rounte se mount karenge: )-----------------------start-------------
-------------
step 1 : import models(kyuki isme hum data base se interaction karenge data lene ke liye)
step 2: define route handler(isme hum jovi krna chahte hai us particular route pe  wo define karenge)
         exports.NAME=async(req,res)=>{
                    try{
                    }catch(){
                         }
         }
     step 2.1:  kuch important point: database se kaise interaction karenge:
               await MyModel.find({}); (yahan await ka kaaam hai jab tak database se data nai le ata tab tak wait karega)
               ******kuch funtion jo use krte hai*****
               Mongoose models provide several static helper functions for CRUD operations. Each of these functions returns a mongoose Query object.
              Model.deleteMany()
              Model.deleteOne()
              Model.find()
              Model.findById()
              Model.findByIdAndDelete()
              Model.findByIdAndRemove()
              Model.findByIdAndUpdate()
              Model.findOne()
              Model.findOneAndDelete()
              Model.findOneAndRemove()
              Model.findOneAndReplace()
              Model.findOneAndUpdate()
              Model.replaceOne()
              Model.updateMany()
              Model.updateOne()
              
 step 3: database se data ane ke baad isko .json ke help se JSON format me data bhej diya jata hai
          res.status(200)    //isme res.status(200) ye batata hai ke successfully data a chuka hai
                .json({
                        success:true,
                        data:todos,
                        message:"Entire data is fetched",
                }) 
                
         agar data successufully nai ata hai : agar koi error ata hai to usko 
         res.status(500)   //isme res.status(500) ye batata hai ke error aya hai 
                .json({
                        success:false,
                        error:err.message,
                        message:"server Error"
                })
                
                
 code:
 
 //import the model
const Todo=require("../models/Todo");

//define route handler
exports.getTodo=async(req,res)=>{
        try{
                // fetch all todo item from database
                const todos=await Todo.find({});

                // response
                res.status(200)
                .json({
                        success:true,
                        data:todos,
                        message:"Entire data is fetched",
                })
              
        }
        catch(err){
                console.error(err);
                res.status(500)
                .json({
                        success:false,
                        error:err.message,
                        message:"server Error"
                })
               
        }
}
             
 

               


---------------------------------------------------------------------------------------------------------------------------------End-------------

4.config (connecction established with database)----------------------------------------------------------------------------start-----------------
---------
step 1:import mongoose (kyuki database se connection karna hai) require("mongoose");
step 2; import .env  (kyuki yahan hum mongodb ka url use karenge jo .env me store hai)
step 3: define a call back function  const dbconnection()=>{}   (kyuki hum chahte hai jab v function call ho database connection ho jaye
step 4: write the connection code inside the call back function 
        mongoose.connect(url,{  
        }).then(()=>{})
          .catch( (err)=>{} )
          
          
code:
const mongoose=require("mongoose");

require("dotenv").config();


// connection database
const dbconnection=()=>{
        mongoose.connect(process.env.DATABASE_URL,{
                useNewUrlParser:true,
                useUnifiedTopology:true,
        })
        .then(()=>console.log("connection establised"))
        .catch((err)=>{
                console.log("connection not successfull established");
                console.log(err.message);
                process.exit(1);
        })
}


----------------------------------------------------------------------------------------------------------------------------End-------------------

5.Route (ab route set karenge aur har ek route pe specific task hoga jisko controller se mount karenge)---------------------start------------------
-------
step 1: import express (  const express=require("express") ) kyuki Router ka use karne wale hai jo express ka ek entity hai
step 2: import Router (const router=express.Router() ) express.Router() function ek naya router object create karta hai, jiske dwara hum server ke
                                                        alag-alag routes aur unke related handlers(controllers) ko define kar sakte hain.
                                                        
step 3: import controller (const {name}=require("../controllers/retrivedata");)  kyuki controller ko mount karenge  har ek route se 
step 4: Define API according to post and get( jovi set kiya huwa hoga uske according kareng ke post request hai ya get request)
step 5: router.get("/getdata",retrivedata)       (/ iska mtlb base or home page , "/getdata" iska mtlb getdata url pe getdata dega)
step 6: export the router  (module.exports=router) taaki router ko use kiya ja sake import karke jo mount kiya huwa hai)

code:
     // import express and Router
const express=require("express");
const router=express.Router();

// import controllers
const {retriveData}=require("../controllers/retrivedata");

// define API
router.post("/getdata",retriveData);

module.exports=router;
          

---------------------------------------------------------------------------------------------------------------------------ENd--------------------

6.index.js(final) ---------------------------------------------------------------------------------------------------------Start-------------------
----------------
step 1: import express and express()   ( because server banega aur midlware)
step 2: import dotenv (taaki .env ka sare data ko use kar pauu)
step 3:  declare midleware to parser the json ( app.use(express.json()) ;     taaki body parse ho jaye aur use kar ske
step 4: import the route for API     (mtlb  jo router me define kiye hai usko import kareng taaki use kar paye yahan) 
         const todoRoutes=require("./routes/todos");
step 5: mount the Api (basically ye islye karte hai kyuki base route ko set kr dete hai aur uske baad base route se jahan jana hai wo router batayega
        jo mene router ke ander define kiya huwa hai
        app.use("/api/v1/",todoRoutes);   //isko midle ware me karegne taki server start hone time he mount ho jaye
step 6: listen server (server ko listen karwayeng)
step 7: call database connection( pahle config ko require karenge aur phr dbconnection()  ko call karenge )
step 8: define default home page:

code: const express=require("express");
const app=express();

// load config from env file
require("dotenv").config();
const PORT=process.env.PORT || 4000;

// middle ware to parse json request  body
app.use(express.json());

// import routes for  TODO API
const todoRoutes=require("./routes/todos");

// mount the todo ASPI routes
app.use("/api/v1/",todoRoutes);


// start server
app.listen(PORT,()=>{
        console.log(`server started at ${PORT}`);
})

// connection to the database
const dbConnect=require("./config/database");
dbConnect();

// default home page
app.get("/",(req,res)=>{
        res.send(`<h1>This is homepage body</h1>`);
})


-----------------------------------------------------------------------------------------------------------------------------End-------------------




